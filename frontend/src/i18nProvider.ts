//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';

const enResources = {
  resources: {
    Users: {
      name: 'Users',
      fields: {
        username: 'Username',
        password: 'Password',
        fitnessGoals: 'Fitness Goals',
        email: 'Email',
        age: 'Age',
        weight: 'Weight',
        height: 'Height',
        id: 'id',
      },
    },
    FitnessActivities: {
      name: 'Fitness Activities',
      fields: {
        activityType: 'Activity Type',
        metric1: 'Metric1',
        metric2: 'Metric2',
        metric3: 'Metric3',
        caloriesBurnedFormula: 'Calories Burned Formula',
        id: 'id',
      },
    },
    Goals: {
      name: 'Goals',
      fields: {
        goalID: 'Goal Id',
        userID: 'User Id',
        targetCalories: 'Target Calories',
        startDate: 'Start Date',
        endDate: 'End Date',
        status: 'Status',
        id: 'id',
      },
    },
    ActivityRecords: {
      name: 'Activity Records',
      fields: {
        recordID: 'Record Id',
        userID: 'User Id',
        activityType: 'Activity Type',
        date: 'Date',
        metric1Value: 'Metric1value',
        metric2Value: 'Metric2value',
        metric3Value: 'Metric3value',
        caloriesBurned: 'Calories Burned',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    Users: {
      name: 'Users (fr)',
      fields: {
        username: 'Username (fr)',
        password: 'Password (fr)',
        fitnessGoals: 'Fitness Goals (fr)',
        email: 'Email (fr)',
        age: 'Age (fr)',
        weight: 'Weight (fr)',
        height: 'Height (fr)',
        id: 'id',
      },
    },
    FitnessActivities: {
      name: 'Fitness Activities (fr)',
      fields: {
        activityType: 'Activity Type (fr)',
        metric1: 'Metric1 (fr)',
        metric2: 'Metric2 (fr)',
        metric3: 'Metric3 (fr)',
        caloriesBurnedFormula: 'Calories Burned Formula (fr)',
        id: 'id',
      },
    },
    Goals: {
      name: 'Goals (fr)',
      fields: {
        goalID: 'Goal Id (fr)',
        userID: 'User Id (fr)',
        targetCalories: 'Target Calories (fr)',
        startDate: 'Start Date (fr)',
        endDate: 'End Date (fr)',
        status: 'Status (fr)',
        id: 'id',
      },
    },
    ActivityRecords: {
      name: 'Activity Records (fr)',
      fields: {
        recordID: 'Record Id (fr)',
        userID: 'User Id (fr)',
        activityType: 'Activity Type (fr)',
        date: 'Date (fr)',
        metric1Value: 'Metric1value (fr)',
        metric2Value: 'Metric2value (fr)',
        metric3Value: 'Metric3value (fr)',
        caloriesBurned: 'Calories Burned (fr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);

const translations = { en, fr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Fran√ßais' },
  ],
);
